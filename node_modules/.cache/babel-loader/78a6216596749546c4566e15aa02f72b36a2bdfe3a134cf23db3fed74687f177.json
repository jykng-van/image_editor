{"ast":null,"code":"export default class ImageEditor{//presented on canvas image info\nconstructor(canvas,message_callback){//the canvas object\n//2nd context of the canvas\n//the image being modified\n//non-zoom ratio of the image based on sizing to meet the max dimension\n//the zoom ratio of the image\n//the zoom ratio of the image based on width\n//the zoom ratio of the image based on height\nthis.max_zoom=4.0;//zoom level\nthis.min_dimension=64;//minimum dimension of the image, for cropping and what's permitted\nthis.max_dimension=1920;//the mouse action mode\nthis.rotate_angle=90;//callback for external message function\nthis.image_types=['image/jpeg','image/png','image/webp','image/gif','image/bmp'];//y coordinates when first clicked\nthis.mouse_engaged=false;//is the mouse down\n//cropping stuff\nthis.crop={x:null,y:null,width:null,height:null,start_x:null,start_y:null};//the which cropping editing method to be used\nthis.handle_radius=4;//radius of the crop handles\nthis.current_image={x:null,y:null,width:null,height:null,start_x:null,start_y:null};//possible max width 2056\nconsole.log('ImageEditor constructor!');this.canvas=canvas;console.log(canvas);this.ctx=this.canvas.getContext('2d');this.img=new Image();this.img.crossOrigin='Anonymous';this.message_callback=message_callback;this.mode='move';this.rotating=false;//mouse actions on canvas\n['mousedown','touchstart'].forEach(e=>this.canvas.addEventListener(e,this.mouse_down.bind(this)));['mouseup','touchend'].forEach(e=>window.addEventListener(e,this.mouse_up.bind(this)));['mousemove','touchmove'].forEach(e=>this.canvas.addEventListener(e,this.mouse_move.bind(this)));//zoom buttons\nthis.zoom=1.0;window.addEventListener('resize',()=>{//redraw on window resize, such as opening and closing the dev console\nconsole.log('resize');if(this.canvas.offsetParent!==null&&this.img.src){this.canvas.removeAttribute('width');this.canvas.removeAttribute('height');this.load_image(null,true);}});this.img.addEventListener('load',this.load_image.bind(this));//important to run when image is done loading, otherwise no dimensions\nconsole.log(this.canvas.width,this.canvas.height);}set_img_src(src){this.img.src=src;}load_image(e){let keep_crop=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;console.log('load_image',e);console.log(devicePixelRatio);if(this.rotating){//if rotating keep crop and zoom level\nkeep_crop=true;this.rotating=false;}try{this.mime_type=this.img.src.substring(this.img.src.indexOf(':')+1,this.img.src.indexOf(';'));console.log('mime_type',this.mime_type);this.canvas.width=this.canvas.offsetWidth;this.canvas.height=this.canvas.offsetHeight;let cwidth=this.canvas.width;let cheight=this.canvas.height;let iwidth=this.img.width;let iheight=this.img.height;let is_wide=iwidth>iheight;console.log('is_wide',is_wide,iwidth,iheight);if(iwidth<this.min_dimension||iheight<this.min_dimension){//minimum size check\nthrow new Error(\"Image doesn't meet minimum size\");}//get adjusted ratio to keep image within max\nif(iwidth>this.max_dimension&&is_wide){console.log('reduce width');this.adjusted_ratio=this.max_dimension/iwidth;}else if(iheight>this.max_dimension){console.log('reduce height');this.adjusted_ratio=this.max_dimension/iheight;}else{this.adjusted_ratio=1.0;}console.log('keep_crop',keep_crop);if(!keep_crop){this.crop={x:0,y:0,width:iwidth,height:iheight,start_x:null,start_y:null};}this.width_ratio=iwidth*this.adjusted_ratio/cwidth;this.height_ratio=iheight*this.adjusted_ratio/cheight;console.log('cwidth',cwidth,'cheight',cheight,'adjusted_ratio',this.adjusted_ratio,'width_ratio',this.width_ratio,'height_ratio',this.height_ratio,'iwidth/width_ratio',iwidth/this.width_ratio,'iheight/width_ratio',iheight/this.width_ratio,'iwidth/height_ratio',iwidth/this.height_ratio,'iheight/height_ratio',iheight/this.height_ratio);//fill height or fill width\nif(iwidth*this.adjusted_ratio>cwidth||iheight*this.adjusted_ratio>cheight){//try to fit into canvas\nif(iwidth*this.adjusted_ratio/this.height_ratio>cwidth){//fit wide because the height is larger than the canvas\nthis.ratio=this.width_ratio;}else{//fit high\nthis.ratio=this.height_ratio;}this.fit_zoom=this.adjusted_ratio/this.ratio;}else{this.fit_zoom=this.adjusted_ratio;this.ratio=this.width_ratio;}//check for zoom levels, based on keep crop or not\nif(!keep_crop){this.zoom=this.fit_zoom;}else{this.zoom=Math.max(this.fit_zoom,this.zoom);}console.log('ratio',this.ratio);console.log('zoom',this.zoom);console.log('crop',this.crop);let current=this.current_image;current.width=iwidth*this.zoom;current.height=iheight*this.zoom;current.x=(cwidth-current.width)/2;current.y=(cheight-current.height)/2;console.log('current',current);this.set_mode(this.mode);}catch(ex){this.message_callback(ex.message);}}//Draw the scale image on the canvas\ndraw_image(){console.log('draw_image');this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);//clear image\nlet src={x:0,y:0,width:this.img.width,height:this.img.height};let current=this.current_image;console.log('src.x',src.x,'src.y',src.y,'src.width',src.width,'src.height',src.height,//get all of source images\n'current.x',current.x,'current.y',current.y,'current.width',current.width,'current.height',current.height);//draw whole image at lower opacity\nthis.ctx.globalAlpha=0.5;this.ctx.drawImage(this.img,src.x,src.y,src.width,src.height,//get all of source images\ncurrent.x,current.y,current.width,current.height);//then draw cropped area at full opacity\nthis.ctx.globalAlpha=1;src=(_ref=>{let{x,y,width,height}=_ref;return{x,y,width,height};})(this.crop);console.log('src.x',src.x,'src.y',src.y,'src.width',src.width,'src.height',src.height);this.ctx.drawImage(this.img,src.x,src.y,src.width,src.height,//get all of source images\nthis.current_image.x+this.crop.x*this.zoom,this.current_image.y+this.crop.y*this.zoom,this.crop.width*this.zoom,this.crop.height*this.zoom);}draw_cropper(){let ctx=this.ctx;let cropbox=this.cropbox;console.log(cropbox);ctx.lineWidth=1;ctx.strokeStyle='#0095DA88';ctx.fillStyle='#0095DA88';//main rectangle\nctx.beginPath();ctx.rect(cropbox.x,cropbox.y,cropbox.width,cropbox.height);let width3rd=cropbox.width*.33;ctx.moveTo(cropbox.x+width3rd,cropbox.y);ctx.lineTo(cropbox.x+width3rd,cropbox.y+cropbox.height);ctx.moveTo(cropbox.x+width3rd*2,cropbox.y);ctx.lineTo(cropbox.x+width3rd*2,cropbox.y+cropbox.height);let height3rd=cropbox.height*.33;ctx.moveTo(cropbox.x,cropbox.y+height3rd);ctx.lineTo(cropbox.x+cropbox.width,cropbox.y+height3rd);ctx.moveTo(cropbox.x,cropbox.y+height3rd*2);ctx.lineTo(cropbox.x+cropbox.width,cropbox.y+height3rd*2);ctx.stroke();ctx.closePath();//corner circles\nlet positions=[{x:cropbox.x,y:cropbox.y},{x:cropbox.x+cropbox.width,y:cropbox.y},{x:cropbox.x,y:cropbox.y+cropbox.height},{x:cropbox.x+cropbox.width,y:cropbox.y+cropbox.height}];positions.forEach(p=>{ctx.beginPath();ctx.arc(p.x,p.y,this.handle_radius,0,2*Math.PI,false);ctx.fill();ctx.closePath();});}set_mode(mode){console.log('set_mode',mode);this.mode=mode;if(mode==='move'){this.set_view_mode();}else if(mode==='crop'){this.set_crop_mode();}}set_view_mode(){this.canvas.style.cursor='move';this.draw_image();}set_crop_mode(){this.canvas.style.cursor='default';this.draw_image();this.draw_cropper();}mouse_down(e){this.mouse_engaged=true;if(e.touches){//touch\nlet canvasbox=this.canvas.getBoundingClientRect();this.start_x=e.touches[0].clientX-canvasbox.left;this.start_y=e.touches[0].clientY-canvasbox.top;}else{//mouse\nthis.start_x=e.offsetX;this.start_y=e.offsetY;}if(this.mode==='move'){console.log(this.current);this.current_image.start_x=this.current_image.x;this.current_image.start_y=this.current_image.y;}else if(this.mode==='crop'){this.crop.start_x=this.cropbox.x;this.crop.start_y=this.cropbox.y;if(this.crop_state==='default'){this.current_image.start_x=this.current_image.x;this.current_image.start_y=this.current_image.y;}console.log(this.crop);}}mouse_up(){this.mouse_engaged=false;}mouse_move(e){let current_x,current_y;if(e.touches){//touch\nlet canvasbox=this.canvas.getBoundingClientRect();current_x=e.touches[0].clientX-canvasbox.left;current_y=e.touches[0].clientY-canvasbox.top;}else{//mouse\ncurrent_x=e.offsetX;current_y=e.offsetY;}let change_x=current_x-this.start_x;let change_y=current_y-this.start_y;let current=this.current_image;if(this.mouse_engaged){console.log(change_x,change_y);if(this.mode==='move'){//move image\n//bounds check\nlet x_pos=current.start_x+change_x;let y_pos=current.start_y+change_y;current.x=this.check_x_bounds(x_pos);current.y=this.check_y_bounds(y_pos);this.draw_image();}else if(this.mode==='crop'){let x_pos=this.cropbox.x,y_pos=this.cropbox.y;let crop_width=this.cropbox.width;let crop_height=this.cropbox.height;console.log(this.cropbox);let cropright=this.cropbox.x+this.cropbox.width;let cropbottom=this.cropbox.y+this.cropbox.height;let left_resize=()=>{if(current_x<current.x)x_pos=current.x;//don't grow beyond left edge\nelse if(current_x>cropright-this.min_dimension/this.ratio)x_pos=cropright-this.min_dimension/this.ratio;//don't shrink smaller than minimum\nelse x_pos=current_x;crop_width=cropright-x_pos;};let right_resize=()=>{if(current_x<current.x+current.width//don't grow beyond the right edge\n&&current_x>this.cropbox.x+this.min_dimension/this.ratio)//don't shrink smaller than the minimum\ncrop_width=current_x-this.cropbox.x;};let top_resize=()=>{if(current_y<current.y)y_pos=current.y;//don't grow beyond the top edge\nelse if(current_y>cropbottom-this.min_dimension/this.ratio)y_pos=cropbottom-this.minheight/this.ratio;//don't shrink smaller than minimum\nelse y_pos=current_y;crop_height=cropbottom-y_pos;};let bottom_resize=()=>{if(current_y<current.y+current.height//don't grow beyond the bottom edge\n&&current_y>this.cropbox.y+this.min_dimension/this.ratio)//don't shrink smaller than the minimum\ncrop_height=current_y-this.cropbox.y;};switch(this.crop_state){case'nw-resize':top_resize();left_resize();break;case'ne-resize':top_resize();right_resize();break;case'sw-resize':bottom_resize();left_resize();break;case'se-resize':bottom_resize();right_resize();break;case'w-resize':left_resize();break;case'e-resize':right_resize();break;case'n-resize':top_resize();break;case's-resize':bottom_resize();break;case'move':x_pos=this.crop.start_x+change_x;y_pos=this.crop.start_y+change_y;if(x_pos<current.x){//leftside\nx_pos=current.x;}else if(x_pos+crop_width>current.x+current.width){//rightside\nx_pos=current.x+current.width-crop_width;}if(y_pos<current.y){//topside\ny_pos=current.y;}else if(y_pos+crop_height>current.y+current.height){//bottomside\ny_pos=current.y+current.height-crop_height;}break;default:current.x=this.check_x_bounds(current.start_x+change_x);current.y=this.check_y_bounds(current.start_y+change_y);x_pos=current.x+this.crop.x*this.zoom;y_pos=current.y+this.crop.y*this.zoom;}this.crop.x=(x_pos-current.x)/this.zoom;this.crop.y=(y_pos-current.y)/this.zoom;this.crop.width=crop_width/this.zoom;this.crop.height=crop_height/this.zoom;console.log(this.crop);this.draw_image();this.draw_cropper();}}else{let cropbox=this.cropbox;let rightedge=cropbox.x+cropbox.width;let bottomedge=cropbox.y+cropbox.height;if(this.mode==='crop'){if(current_x>=cropbox.x-this.handle_radius&&current_x<=cropbox.x+this.handle_radius&&current_y>=cropbox.y-this.handle_radius&&current_y<=cropbox.y+this.handle_radius){//upper left\nthis.crop_state='nw-resize';}else if(current_x>=rightedge-this.handle_radius&&current_x<=rightedge+this.handle_radius&&current_y>=cropbox.y-this.handle_radius&&current_y<=cropbox.y+this.handle_radius){//upper right\nthis.crop_state='ne-resize';}else if(current_x>=cropbox.x-this.handle_radius&&current_x<=cropbox.x+this.handle_radius&&current_y>=bottomedge-this.handle_radius&&current_y<=bottomedge+this.handle_radius){//lower left\nthis.crop_state='sw-resize';}else if(current_x>=rightedge-this.handle_radius&&current_x<=rightedge+this.handle_radius&&current_y>=bottomedge-this.handle_radius&&current_y<=bottomedge+this.handle_radius){//lower right\nthis.crop_state='se-resize';}else if(current_x>=cropbox.x-this.handle_radius&&current_x<=cropbox.x+this.handle_radius&&current_y>cropbox.y+this.handle_radius&&current_y<bottomedge-this.handle_radius){//left edge\nthis.crop_state='w-resize';}else if(current_x>=rightedge-this.handle_radius&&current_x<=rightedge+this.handle_radius&&current_y>cropbox.y+this.handle_radius&&current_y<bottomedge-this.handle_radius){//right edge\nthis.crop_state='e-resize';}else if(current_y>=cropbox.y-this.handle_radius&&current_y<=cropbox.y+this.handle_radius&&current_x>cropbox.x+this.handle_radius&&current_x<rightedge-this.handle_radius){//top edge\nthis.crop_state='n-resize';}else if(current_y>=bottomedge-this.handle_radius&&current_y<=bottomedge+this.handle_radius&&current_x>cropbox.x+this.handle_radius&&current_x<rightedge-this.handle_radius){//top edge\nthis.crop_state='s-resize';}else if(current_x>cropbox.x+this.handle_radius&&current_x<rightedge-this.handle_radius&&current_y>cropbox.y+this.handle_radius&&current_y<bottomedge-this.handle_radius){//inside\nthis.crop_state='move';}else{//outside\nthis.crop_state='default';}this.canvas.style.cursor=this.crop_state;}}}check_x_bounds(x_pos){let current=this.current_image;if(current.width<=this.canvas.width){//image is smaller than canvas\nif(x_pos<0){//leftside\nx_pos=0;}else if(x_pos+current.width>this.canvas.width){//rightside\nx_pos=this.canvas.width-current.width;}}else{//image is larger than canvas\nif(x_pos+current.width<this.canvas.width){x_pos=this.canvas.width-current.width;//leftside\n}else if(x_pos>0){x_pos=0;//rightside\n}}return x_pos;}check_y_bounds(y_pos){let current=this.current_image;if(current.height<=this.canvas.height){//image is smaller than canvas\nif(y_pos<0){//topside\ny_pos=0;}else if(y_pos+current.height>this.canvas.height){//bottomside\ny_pos=this.canvas.height-current.height;}}else{//image is larger than canvas\nif(y_pos+current.height<this.canvas.height){y_pos=this.canvas.height-current.height;//topside\n}else if(y_pos>0){y_pos=0;//bottomside\n}}return y_pos;}zoom_in(){this.scale(2.0);}zoom_out(){this.scale(.5);}scale(scale){let current=this.current_image;let center_x=this.canvas.width/2;let center_y=this.canvas.height/2;let is_wide=this.img.width>this.img.height;console.log('is_wide',is_wide);let new_zoom=this.zoom*scale;if(scale<1.0&&new_zoom<this.fit_zoom){console.log('zoom out too small');new_zoom=this.fit_zoom;}new_zoom=Math.min(this.max_zoom,new_zoom);console.log('new_zoom',new_zoom);scale=new_zoom/this.zoom;console.log('scale',scale);let x_diff=current.x-center_x;let y_diff=current.y-center_y;//adjust width\ncurrent.width=current.width*scale;current.height=current.height*scale;//adjust x and y which gets shifted\nlet x_pos=center_x+x_diff*scale;let y_pos=center_y+y_diff*scale;current.x=this.check_x_bounds(x_pos);current.y=this.check_y_bounds(y_pos);console.log(scale,x_diff,y_diff,current.x,current.y);this.ratio=this.width_ratio=this.img.width/current.width;this.height_ratio=this.img.height/current.height;this.zoom=new_zoom;console.log('zoom',this.zoom);this.draw_image();if(this.mode==='crop'){this.draw_cropper();}}rotate_image(deg){let img=this.img;let angle=deg*Math.PI/180;console.log('angle',angle);let ncanvas=document.createElement('canvas');//temporary canvas to overwrite canvas\nncanvas.width=img.height;ncanvas.height=img.width;console.log(ncanvas.width,ncanvas.height);//rotate crop area\nif(deg===90){[this.crop.x,this.crop.y]=[this.img.height-this.crop.y-this.crop.height,this.crop.x];}else if(deg===-90){[this.crop.x,this.crop.y]=[this.crop.y,this.img.width-this.crop.x-this.crop.width];}[this.crop.width,this.crop.height]=[this.crop.height,this.crop.width];console.log('new crop',this.crop);let ctx=ncanvas.getContext('2d');//rotating from center\nctx.translate(ncanvas.width/2,ncanvas.height/2);ctx.rotate(angle);ctx.translate(-ncanvas.width/2,-ncanvas.height/2);ctx.drawImage(img,0,0,img.width,img.height,(ncanvas.width-img.width)/2,-(ncanvas.width-img.width)/2,img.width,img.height);console.log((ncanvas.width-img.width)/2,-(ncanvas.width-img.width)/2,img.width,img.height);let img_url=ncanvas.toDataURL(this.mime_type);this.rotating=true;//to keep crop\nthis.img.src=img_url;//set new image data\n}save_image(){//create new canvas\nlet ncanvas=document.createElement('canvas');let crop=this.crop;ncanvas.width=crop.width*this.adjusted_ratio;ncanvas.height=crop.height*this.adjusted_ratio;let ctx=ncanvas.getContext('2d');ctx.drawImage(this.img,crop.x,crop.y,crop.width,crop.height,0,0,ncanvas.width,ncanvas.height);console.log('save as',this.mime_type);let img_url=ncanvas.toDataURL(this.mime_type);return img_url;}invalid_file(){this.message_callback('Only JPEGs, PNGs, GIFs, BMPs, or WebP allowed');}get cropbox(){let current=this.current_image;return{x:current.x+this.crop.x*this.zoom,y:current.y+this.crop.y*this.zoom,width:this.crop.width*this.zoom,height:this.crop.height*this.zoom};}}","map":{"version":3,"names":["ImageEditor","constructor","canvas","message_callback","max_zoom","min_dimension","max_dimension","rotate_angle","image_types","mouse_engaged","crop","x","y","width","height","start_x","start_y","handle_radius","current_image","console","log","ctx","getContext","img","Image","crossOrigin","mode","rotating","forEach","e","addEventListener","mouse_down","bind","window","mouse_up","mouse_move","zoom","offsetParent","src","removeAttribute","load_image","set_img_src","keep_crop","arguments","length","undefined","devicePixelRatio","mime_type","substring","indexOf","offsetWidth","offsetHeight","cwidth","cheight","iwidth","iheight","is_wide","Error","adjusted_ratio","width_ratio","height_ratio","ratio","fit_zoom","Math","max","current","set_mode","ex","message","draw_image","clearRect","globalAlpha","drawImage","_ref","draw_cropper","cropbox","lineWidth","strokeStyle","fillStyle","beginPath","rect","width3rd","moveTo","lineTo","height3rd","stroke","closePath","positions","p","arc","PI","fill","set_view_mode","set_crop_mode","style","cursor","touches","canvasbox","getBoundingClientRect","clientX","left","clientY","top","offsetX","offsetY","crop_state","current_x","current_y","change_x","change_y","x_pos","y_pos","check_x_bounds","check_y_bounds","crop_width","crop_height","cropright","cropbottom","left_resize","right_resize","top_resize","minheight","bottom_resize","rightedge","bottomedge","zoom_in","scale","zoom_out","center_x","center_y","new_zoom","min","x_diff","y_diff","rotate_image","deg","angle","ncanvas","document","createElement","translate","rotate","img_url","toDataURL","save_image","invalid_file"],"sources":["C:/Users/Jason/projects/project_showcase/image_editor/src/ImageEditor.js"],"sourcesContent":["export default class ImageEditor{\r\n    canvas; //the canvas object\r\n    ctx; //2nd context of the canvas\r\n    img; //the image being modified\r\n    mime_type;\r\n\r\n    adjusted_ratio; //non-zoom ratio of the image based on sizing to meet the max dimension\r\n    ratio; //the zoom ratio of the image\r\n    width_ratio; //the zoom ratio of the image based on width\r\n    height_ratio; //the zoom ratio of the image based on height\r\n    max_zoom = 4.0; //the maximum zoom level\r\n    fit_zoom; //fit zoom level\r\n    zoom; //zoom level\r\n\r\n    min_dimension = 64; //minimum dimension of the image, for cropping and what's permitted\r\n    max_dimension = 1920; //maximum dimension of the image, which will resize if too big\r\n    mode; //the mouse action mode\r\n    rotate_angle = 90; //angle of rotation\r\n    rotating; //if the image is being rotated (to signal to img load event handler)\r\n\r\n    message_callback; //callback for external message function\r\n\r\n    image_types = ['image/jpeg','image/png','image/webp','image/gif','image/bmp']; //acceptable mimetypes for images\r\n\r\n    //mouse stuff\r\n    start_x; //x coordinates when first clicked\r\n    start_y; //y coordinates when first clicked\r\n    mouse_engaged = false; //is the mouse down\r\n\r\n    //cropping stuff\r\n    crop = {x:null, y:null, width:null, height:null, start_x:null, start_y:null}; //info on the crop\r\n    crop_state; //the which cropping editing method to be used\r\n    handle_radius = 4; //radius of the crop handles\r\n    current_image = {\r\n        x:null, y:null,\r\n        width:null, height:null,\r\n        start_x:null, start_y:null\r\n    }; //presented on canvas image info\r\n\r\n    constructor(canvas, message_callback){\r\n        //possible max width 2056\r\n        console.log('ImageEditor constructor!');\r\n\r\n        this.canvas = canvas;\r\n        console.log(canvas);\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.img = new Image();\r\n        this.img.crossOrigin = 'Anonymous';\r\n\r\n        this.message_callback = message_callback;\r\n        this.mode = 'move';\r\n        this.rotating = false;\r\n\r\n        //mouse actions on canvas\r\n        ['mousedown','touchstart'].forEach(e=>this.canvas.addEventListener(e,this.mouse_down.bind(this)));\r\n        ['mouseup','touchend'].forEach(e=>window.addEventListener(e,this.mouse_up.bind(this)));\r\n        ['mousemove','touchmove'].forEach(e=>this.canvas.addEventListener(e,this.mouse_move.bind(this)));\r\n\r\n        //zoom buttons\r\n        this.zoom = 1.0;\r\n\r\n        window.addEventListener('resize', ()=>{ //redraw on window resize, such as opening and closing the dev console\r\n            console.log('resize');\r\n            if (this.canvas.offsetParent !== null && this.img.src){\r\n                this.canvas.removeAttribute('width');\r\n                this.canvas.removeAttribute('height');\r\n                this.load_image(null, true);\r\n            }\r\n        });\r\n        this.img.addEventListener('load', this.load_image.bind(this)); //important to run when image is done loading, otherwise no dimensions\r\n        console.log(this.canvas.width, this.canvas.height);\r\n    }\r\n    set_img_src(src){\r\n        this.img.src = src;\r\n    }\r\n    load_image(e, keep_crop=false){\r\n        console.log('load_image', e);\r\n        console.log(devicePixelRatio);\r\n        if (this.rotating){ //if rotating keep crop and zoom level\r\n            keep_crop = true;\r\n            this.rotating = false;\r\n        }\r\n\r\n        try{\r\n            this.mime_type = this.img.src.substring(this.img.src.indexOf(':')+1, this.img.src.indexOf(';'));\r\n            console.log('mime_type', this.mime_type);\r\n\r\n            this.canvas.width = this.canvas.offsetWidth;\r\n            this.canvas.height = this.canvas.offsetHeight;\r\n\r\n            let cwidth = this.canvas.width;\r\n            let cheight = this.canvas.height;\r\n\r\n            let iwidth = this.img.width;\r\n            let iheight = this.img.height;\r\n\r\n            let is_wide = iwidth > iheight;\r\n            console.log('is_wide', is_wide, iwidth, iheight);\r\n            if (iwidth < this.min_dimension || iheight < this.min_dimension){ //minimum size check\r\n                throw new Error(\"Image doesn't meet minimum size\");\r\n            }\r\n\r\n            //get adjusted ratio to keep image within max\r\n            if (iwidth > this.max_dimension && is_wide){\r\n                console.log('reduce width');\r\n                this.adjusted_ratio = this.max_dimension / iwidth;\r\n            }else if (iheight > this.max_dimension){\r\n                console.log('reduce height');\r\n                this.adjusted_ratio = this.max_dimension  / iheight;\r\n            }else{\r\n                this.adjusted_ratio = 1.0;\r\n            }\r\n            console.log('keep_crop', keep_crop);\r\n            if (!keep_crop){\r\n                this.crop = {\r\n                    x:0, y:0,\r\n                    width:iwidth, height:iheight,\r\n                    start_x:null, start_y:null\r\n                };\r\n            }\r\n\r\n            this.width_ratio = (iwidth * this.adjusted_ratio) / cwidth;\r\n            this.height_ratio = (iheight * this.adjusted_ratio) / cheight;\r\n\r\n            console.log('cwidth', cwidth, 'cheight', cheight, 'adjusted_ratio', this.adjusted_ratio,\r\n            'width_ratio', this.width_ratio, 'height_ratio', this.height_ratio,\r\n            'iwidth/width_ratio', iwidth/this.width_ratio, 'iheight/width_ratio',iheight/this.width_ratio,\r\n            'iwidth/height_ratio', iwidth/this.height_ratio, 'iheight/height_ratio', iheight/this.height_ratio);\r\n            //fill height or fill width\r\n            if (iwidth * this.adjusted_ratio > cwidth || iheight * this.adjusted_ratio > cheight){ //try to fit into canvas\r\n                if (iwidth*this.adjusted_ratio/this.height_ratio > cwidth){//fit wide because the height is larger than the canvas\r\n                    this.ratio = this.width_ratio;\r\n                }else{//fit high\r\n                    this.ratio = this.height_ratio;\r\n                }\r\n                this.fit_zoom = this.adjusted_ratio/this.ratio;\r\n            }else{\r\n                this.fit_zoom = this.adjusted_ratio;\r\n                this.ratio = this.width_ratio;\r\n            }\r\n            //check for zoom levels, based on keep crop or not\r\n            if (!keep_crop){\r\n                this.zoom = this.fit_zoom;\r\n            }else{\r\n                this.zoom = Math.max(this.fit_zoom, this.zoom);\r\n            }\r\n            console.log('ratio', this.ratio);\r\n            console.log('zoom', this.zoom);\r\n            console.log('crop', this.crop);\r\n\r\n            let current = this.current_image;\r\n            current.width = iwidth * this.zoom;\r\n            current.height = iheight * this.zoom;\r\n\r\n            current.x = (cwidth - current.width)/2;\r\n            current.y = (cheight - current.height)/2;\r\n\r\n            console.log('current', current);\r\n            this.set_mode(this.mode);\r\n        }catch(ex){\r\n            this.message_callback(ex.message);\r\n        }\r\n\r\n    }\r\n    //Draw the scale image on the canvas\r\n    draw_image(){\r\n        console.log('draw_image');\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height); //clear image\r\n\r\n        let src = {x:0,y:0, width:this.img.width, height:this.img.height};\r\n        let current = this.current_image;\r\n        console.log('src.x', src.x, 'src.y', src.y, 'src.width', src.width, 'src.height', src.height, //get all of source images\r\n        'current.x', current.x, 'current.y', current.y, 'current.width', current.width, 'current.height', current.height);\r\n\r\n        //draw whole image at lower opacity\r\n        this.ctx.globalAlpha = 0.5;\r\n        this.ctx.drawImage(this.img,\r\n            src.x, src.y, src.width, src.height, //get all of source images\r\n            current.x, current.y,\r\n            current.width, current.height);\r\n        //then draw cropped area at full opacity\r\n        this.ctx.globalAlpha = 1;\r\n        src = (({x,y,width,height})=>({x,y,width,height}))(this.crop);\r\n        console.log('src.x', src.x, 'src.y', src.y, 'src.width', src.width, 'src.height', src.height);\r\n        this.ctx.drawImage(this.img,\r\n            src.x, src.y, src.width, src.height, //get all of source images\r\n            this.current_image.x+this.crop.x*this.zoom,\r\n            this.current_image.y+this.crop.y*this.zoom,\r\n            this.crop.width*this.zoom,\r\n            this.crop.height*this.zoom);\r\n    }\r\n\r\n    draw_cropper(){\r\n        let ctx = this.ctx;\r\n        let cropbox = this.cropbox;\r\n        console.log(cropbox);\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#0095DA88';\r\n        ctx.fillStyle = '#0095DA88';\r\n\r\n        //main rectangle\r\n        ctx.beginPath();\r\n        ctx.rect(cropbox.x, cropbox.y, cropbox.width, cropbox.height);\r\n        let width3rd = cropbox.width*.33;\r\n        ctx.moveTo(cropbox.x + width3rd, cropbox.y);\r\n        ctx.lineTo(cropbox.x + width3rd, cropbox.y+cropbox.height);\r\n        ctx.moveTo(cropbox.x + width3rd*2, cropbox.y);\r\n        ctx.lineTo(cropbox.x + width3rd*2, cropbox.y+cropbox.height);\r\n        let height3rd = cropbox.height*.33;\r\n        ctx.moveTo(cropbox.x, cropbox.y + height3rd);\r\n        ctx.lineTo(cropbox.x + cropbox.width, cropbox.y + height3rd);\r\n        ctx.moveTo(cropbox.x, cropbox.y + height3rd*2);\r\n        ctx.lineTo(cropbox.x + cropbox.width, cropbox.y + height3rd*2);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        //corner circles\r\n        let positions = [{x:cropbox.x, y:cropbox.y},{x:cropbox.x+cropbox.width, y:cropbox.y},\r\n            {x:cropbox.x, y:cropbox.y+cropbox.height},{x:cropbox.x+cropbox.width, y:cropbox.y+cropbox.height}];\r\n        positions.forEach(p=>{\r\n            ctx.beginPath();\r\n            ctx.arc(p.x, p.y, this.handle_radius, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.closePath();\r\n        });\r\n    }\r\n    set_mode(mode){\r\n        console.log('set_mode', mode);\r\n        this.mode = mode;\r\n\r\n        if(mode==='move'){\r\n            this.set_view_mode();\r\n        }else if (mode==='crop'){\r\n            this.set_crop_mode();\r\n        }\r\n    }\r\n    set_view_mode(){\r\n        this.canvas.style.cursor = 'move';\r\n        this.draw_image();\r\n    }\r\n    set_crop_mode(){\r\n        this.canvas.style.cursor = 'default';\r\n        this.draw_image();\r\n        this.draw_cropper();\r\n    }\r\n    mouse_down(e){\r\n        this.mouse_engaged  = true;\r\n        if (e.touches){ //touch\r\n            let canvasbox = this.canvas.getBoundingClientRect();\r\n            this.start_x = e.touches[0].clientX - canvasbox.left;\r\n            this.start_y = e.touches[0].clientY - canvasbox.top;\r\n        }else{ //mouse\r\n            this.start_x = e.offsetX;\r\n            this.start_y = e.offsetY;\r\n        }\r\n\r\n        if (this.mode==='move'){\r\n            console.log(this.current);\r\n            this.current_image.start_x = this.current_image.x;\r\n            this.current_image.start_y = this.current_image.y;\r\n        }else if (this.mode==='crop'){\r\n            this.crop.start_x = this.cropbox.x;\r\n            this.crop.start_y = this.cropbox.y;\r\n            if (this.crop_state==='default'){\r\n                this.current_image.start_x = this.current_image.x;\r\n                this.current_image.start_y = this.current_image.y;\r\n            }\r\n            console.log(this.crop);\r\n        }\r\n    }\r\n    mouse_up(){\r\n        this.mouse_engaged = false;\r\n    }\r\n    mouse_move(e){\r\n        let current_x, current_y;\r\n        if (e.touches){ //touch\r\n            let canvasbox = this.canvas.getBoundingClientRect();\r\n            current_x = e.touches[0].clientX - canvasbox.left;\r\n            current_y = e.touches[0].clientY - canvasbox.top;\r\n        }else{ //mouse\r\n            current_x = e.offsetX;\r\n            current_y = e.offsetY;\r\n        }\r\n\r\n        let change_x = current_x - this.start_x;\r\n        let change_y = current_y - this.start_y;\r\n        let current = this.current_image;\r\n        if (this.mouse_engaged){\r\n            console.log(change_x, change_y);\r\n\r\n            if(this.mode==='move'){ //move image\r\n                //bounds check\r\n                let x_pos = current.start_x+change_x;\r\n                let y_pos = current.start_y+change_y;\r\n\r\n                current.x = this.check_x_bounds(x_pos);\r\n                current.y = this.check_y_bounds(y_pos);\r\n                this.draw_image();\r\n            }else if (this.mode==='crop'){\r\n                let x_pos = this.cropbox.x, y_pos = this.cropbox.y;\r\n                let crop_width = this.cropbox.width;\r\n                let crop_height = this.cropbox.height;\r\n                console.log(this.cropbox);\r\n                let cropright = this.cropbox.x+this.cropbox.width;\r\n                let cropbottom = this.cropbox.y+this.cropbox.height;\r\n\r\n                let left_resize = ()=>{\r\n                    if (current_x < current.x) x_pos=current.x; //don't grow beyond left edge\r\n                    else if (current_x > cropright - this.min_dimension/this.ratio) x_pos=cropright-this.min_dimension/this.ratio; //don't shrink smaller than minimum\r\n                    else x_pos = current_x;\r\n\r\n                    crop_width = cropright - x_pos;\r\n                };\r\n                let right_resize = ()=>{\r\n                    if (current_x < current.x+current.width  //don't grow beyond the right edge\r\n                    && current_x > this.cropbox.x + this.min_dimension/this.ratio) //don't shrink smaller than the minimum\r\n                        crop_width = current_x - this.cropbox.x;\r\n                };\r\n                let top_resize = ()=>{\r\n                    if (current_y < current.y) y_pos=current.y; //don't grow beyond the top edge\r\n                    else if (current_y > cropbottom - this.min_dimension/this.ratio) y_pos=cropbottom-this.minheight/this.ratio; //don't shrink smaller than minimum\r\n                    else y_pos = current_y;\r\n\r\n                    crop_height = cropbottom - y_pos;\r\n                }\r\n                let bottom_resize = ()=>{\r\n                    if (current_y < current.y+current.height //don't grow beyond the bottom edge\r\n                    && current_y > this.cropbox.y + this.min_dimension/this.ratio) //don't shrink smaller than the minimum\r\n                        crop_height = current_y - this.cropbox.y;\r\n                }\r\n                switch(this.crop_state){\r\n                    case 'nw-resize':\r\n                        top_resize();\r\n                        left_resize();\r\n                        break;\r\n                    case 'ne-resize':\r\n                        top_resize();\r\n                        right_resize();\r\n                        break;\r\n                    case 'sw-resize':\r\n                        bottom_resize();\r\n                        left_resize();\r\n                        break;\r\n                    case 'se-resize':\r\n                        bottom_resize();\r\n                        right_resize();\r\n                        break;\r\n                    case 'w-resize':\r\n                        left_resize();\r\n                        break;\r\n                    case 'e-resize':\r\n                        right_resize();\r\n                        break;\r\n                    case 'n-resize':\r\n                        top_resize();\r\n                        break;\r\n                    case 's-resize':\r\n                        bottom_resize();\r\n                        break;\r\n                    case 'move':\r\n                        x_pos = this.crop.start_x+change_x;\r\n                        y_pos = this.crop.start_y+change_y;\r\n\r\n                        if (x_pos < current.x){ //leftside\r\n                            x_pos = current.x;\r\n                        }else if (x_pos + crop_width > current.x + current.width){//rightside\r\n                            x_pos = current.x + current.width - crop_width;\r\n                        }\r\n                        if (y_pos < current.y){ //topside\r\n                            y_pos = current.y;\r\n                        }else if (y_pos + crop_height > current.y + current.height){//bottomside\r\n                            y_pos = current.y + current.height - crop_height;\r\n                        }\r\n                        break;\r\n                    default:\r\n\r\n                        current.x = this.check_x_bounds(current.start_x+change_x);\r\n                        current.y = this.check_y_bounds(current.start_y+change_y);\r\n                        x_pos = current.x + this.crop.x*this.zoom;\r\n                        y_pos = current.y + this.crop.y*this.zoom;\r\n                }\r\n\r\n                this.crop.x = (x_pos - current.x)/this.zoom;\r\n                this.crop.y = (y_pos - current.y)/this.zoom;\r\n                this.crop.width = crop_width/this.zoom;\r\n                this.crop.height = crop_height/this.zoom;\r\n                console.log(this.crop);\r\n                this.draw_image();\r\n                this.draw_cropper();\r\n            }\r\n        }else{\r\n            let cropbox = this.cropbox;\r\n            let rightedge = cropbox.x + cropbox.width;\r\n            let bottomedge = cropbox.y + cropbox.height;\r\n            if (this.mode==='crop'){\r\n                if (current_x >= cropbox.x-this.handle_radius && current_x <= cropbox.x+this.handle_radius &&\r\n                current_y >= cropbox.y-this.handle_radius && current_y <= cropbox.y+this.handle_radius){ //upper left\r\n                    this.crop_state = 'nw-resize';\r\n                }else if (current_x >= rightedge-this.handle_radius && current_x <= rightedge+this.handle_radius &&\r\n                current_y >= cropbox.y-this.handle_radius && current_y <= cropbox.y+this.handle_radius){ //upper right\r\n                    this.crop_state = 'ne-resize';\r\n                }else if (current_x >= cropbox.x-this.handle_radius && current_x <= cropbox.x+this.handle_radius &&\r\n                current_y >= bottomedge-this.handle_radius && current_y <= bottomedge+this.handle_radius){ //lower left\r\n                    this.crop_state = 'sw-resize';\r\n                }else if (current_x >= rightedge-this.handle_radius && current_x <= rightedge+this.handle_radius &&\r\n                current_y >= bottomedge-this.handle_radius && current_y <= bottomedge+this.handle_radius){ //lower right\r\n                    this.crop_state = 'se-resize';\r\n                }else if (current_x >= cropbox.x-this.handle_radius && current_x <= cropbox.x+this.handle_radius &&\r\n                current_y > cropbox.y+this.handle_radius && current_y < bottomedge-this.handle_radius){ //left edge\r\n                    this.crop_state = 'w-resize';\r\n                }else if (current_x >= rightedge-this.handle_radius && current_x <= rightedge+this.handle_radius &&\r\n                current_y > cropbox.y+this.handle_radius && current_y < bottomedge-this.handle_radius){ //right edge\r\n                    this.crop_state = 'e-resize';\r\n                }else if (current_y >= cropbox.y-this.handle_radius && current_y <= cropbox.y+this.handle_radius &&\r\n                current_x > cropbox.x+this.handle_radius && current_x < rightedge-this.handle_radius){ //top edge\r\n                    this.crop_state = 'n-resize';\r\n                }else if (current_y >= bottomedge-this.handle_radius && current_y <= bottomedge+this.handle_radius &&\r\n                current_x > cropbox.x+this.handle_radius && current_x < rightedge-this.handle_radius){ //top edge\r\n                    this.crop_state = 's-resize';\r\n                }else if (current_x > cropbox.x+this.handle_radius && current_x < rightedge-this.handle_radius &&\r\n                current_y > cropbox.y+this.handle_radius && current_y < bottomedge-this.handle_radius){ //inside\r\n                    this.crop_state = 'move';\r\n                } else{ //outside\r\n                    this.crop_state = 'default';\r\n                }\r\n                this.canvas.style.cursor = this.crop_state;\r\n\r\n            }\r\n        }\r\n    }\r\n    check_x_bounds(x_pos){\r\n        let current = this.current_image;\r\n        if (current.width <= this.canvas.width){ //image is smaller than canvas\r\n            if (x_pos < 0){ //leftside\r\n                x_pos = 0;\r\n            }else if (x_pos + current.width > this.canvas.width){//rightside\r\n                x_pos = this.canvas.width - current.width;\r\n            }\r\n        }else{ //image is larger than canvas\r\n            if (x_pos + current.width < this.canvas.width){\r\n                x_pos = this.canvas.width - current.width; //leftside\r\n            }else if (x_pos > 0){\r\n                x_pos = 0; //rightside\r\n            }\r\n        }\r\n        return x_pos;\r\n    }\r\n    check_y_bounds(y_pos){\r\n        let current = this.current_image;\r\n        if (current.height <= this.canvas.height){ //image is smaller than canvas\r\n            if (y_pos < 0){ //topside\r\n                y_pos = 0;\r\n            }else if (y_pos + current.height > this.canvas.height){//bottomside\r\n                y_pos = this.canvas.height - current.height;\r\n            }\r\n        }else{ //image is larger than canvas\r\n            if (y_pos + current.height < this.canvas.height){\r\n                y_pos = this.canvas.height - current.height; //topside\r\n            }else if (y_pos > 0){\r\n                y_pos = 0; //bottomside\r\n            }\r\n        }\r\n        return y_pos;\r\n    }\r\n    zoom_in(){\r\n        this.scale(2.0);\r\n    }\r\n    zoom_out(){\r\n        this.scale(.5);\r\n    }\r\n    scale(scale){\r\n        let current = this.current_image;\r\n        let center_x = this.canvas.width / 2;\r\n        let center_y = this.canvas.height / 2;\r\n\r\n        let is_wide = this.img.width > this.img.height;\r\n        console.log('is_wide',is_wide);\r\n        let new_zoom = this.zoom * scale;\r\n        if (scale<1.0 && new_zoom < this.fit_zoom){\r\n            console.log('zoom out too small');\r\n            new_zoom = this.fit_zoom;\r\n        }\r\n        new_zoom = Math.min(this.max_zoom, new_zoom);\r\n        console.log('new_zoom',new_zoom);\r\n        scale = new_zoom / this.zoom;\r\n        console.log('scale',scale);\r\n\r\n        let x_diff = current.x - center_x;\r\n        let y_diff = current.y - center_y;\r\n\r\n        //adjust width\r\n        current.width = current.width * scale;\r\n        current.height = current.height * scale;\r\n\r\n        //adjust x and y which gets shifted\r\n        let x_pos = center_x + x_diff * scale;\r\n        let y_pos = center_y + y_diff * scale;\r\n\r\n\r\n        current.x = this.check_x_bounds(x_pos);\r\n        current.y = this.check_y_bounds(y_pos);\r\n        console.log(scale, x_diff, y_diff, current.x, current.y);\r\n        this.ratio = this.width_ratio = this.img.width / current.width;\r\n        this.height_ratio = this.img.height / current.height;\r\n\r\n        this.zoom = new_zoom;\r\n\r\n        console.log('zoom', this.zoom);\r\n        this.draw_image();\r\n        if (this.mode==='crop'){\r\n            this.draw_cropper();\r\n        }\r\n    }\r\n    rotate_image(deg){\r\n        let img = this.img;\r\n        let angle = deg*Math.PI/180;\r\n        console.log('angle',angle);\r\n\r\n        let ncanvas = document.createElement('canvas'); //temporary canvas to overwrite canvas\r\n        ncanvas.width = img.height;\r\n        ncanvas.height = img.width;\r\n\r\n        console.log(ncanvas.width, ncanvas.height);\r\n\r\n        //rotate crop area\r\n        if (deg === 90){\r\n            [this.crop.x, this.crop.y] = [this.img.height-this.crop.y-this.crop.height, this.crop.x];\r\n        }else if (deg === -90){\r\n            [this.crop.x, this.crop.y] = [this.crop.y, this.img.width-this.crop.x-this.crop.width];\r\n        }\r\n        [this.crop.width, this.crop.height] = [this.crop.height, this.crop.width];\r\n        console.log('new crop', this.crop);\r\n\r\n        let ctx = ncanvas.getContext('2d');\r\n\r\n        //rotating from center\r\n        ctx.translate(ncanvas.width/2, ncanvas.height/2);\r\n        ctx.rotate(angle);\r\n        ctx.translate(-ncanvas.width/2, -ncanvas.height/2);\r\n        ctx.drawImage(img, 0,0,\r\n            img.width,img.height,\r\n            (ncanvas.width-img.width)/2, -(ncanvas.width-img.width)/2,\r\n            img.width, img.height);\r\n        console.log((ncanvas.width-img.width)/2, -(ncanvas.width-img.width)/2,\r\n        img.width, img.height);\r\n        let img_url = ncanvas.toDataURL(this.mime_type);\r\n        this.rotating = true; //to keep crop\r\n        this.img.src = img_url; //set new image data\r\n    }\r\n\r\n    save_image(){\r\n        //create new canvas\r\n        let ncanvas = document.createElement('canvas');\r\n        let crop = this.crop;\r\n        ncanvas.width = crop.width * this.adjusted_ratio;\r\n        ncanvas.height = crop.height * this.adjusted_ratio;\r\n        let ctx = ncanvas.getContext('2d');\r\n        ctx.drawImage(this.img, crop.x, crop.y, crop.width, crop.height,\r\n            0, 0, ncanvas.width, ncanvas.height);\r\n        console.log('save as', this.mime_type);\r\n        let img_url = ncanvas.toDataURL(this.mime_type);\r\n        return img_url;\r\n    }\r\n\r\n    invalid_file(){\r\n        this.message_callback('Only JPEGs, PNGs, GIFs, BMPs, or WebP allowed');\r\n    }\r\n\r\n    get cropbox(){\r\n        let current = this.current_image;\r\n        return {\r\n            x: current.x + this.crop.x*this.zoom,\r\n            y: current.y + this.crop.y*this.zoom,\r\n            width: this.crop.width*this.zoom,\r\n            height: this.crop.height*this.zoom\r\n        };\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}